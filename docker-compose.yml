version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://backend:3000
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/loganalysis
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  logrca:
    build: ./LogRCA
    volumes:
      - ./LogRCA/output:/app/output
      - ./LogRCA/OpenStack:/app/OpenStack
      - ./LogRCA/nova-13.0.0:/app/nova-13.0.0
      - ./LogRCA/import_logs.js:/app/import_logs.js
      - ./LogRCA/config.yaml:/app/config.yaml
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/loganalysis
      - OPENAI_API_KEY=${OPENAI_API_KEY:-sk-IXv5inyh4jRh9ae8bRFbuZ1NDpQVXcTgjnUJW024Mn93JTsx}
      - OPENAI_API_BASE=${OPENAI_API_BASE:-https://api.openai-proxy.org/v1}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
    depends_on:
      - mongodb
    restart: on-failure

  # lograg:
  #   build: 
  #     context: .
  #     dockerfile: ./LogRAG/Dockerfile
  #   volumes:
  #     - ./LogRAG:/app/LogRAG
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - MONGODB_URI=mongodb://mongodb:27017/loganalysis
  #   depends_on:
  #     - mongodb
  #   restart: on-failure

volumes:
  mongodb_data:

networks:
  app-network:
    driver: bridge 